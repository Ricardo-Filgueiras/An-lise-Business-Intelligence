table dHora
	lineageTag: 48731a25-a30a-468d-865c-07daad973b57

	column Hora
		dataType: dateTime
		formatString: Long Time
		lineageTag: 11deb1e9-596f-4892-8474-5495d593f5ef
		summarizeBy: none
		sourceColumn: Hora

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Time

	column 'Hora Num'
		dataType: int64
		formatString: 0
		lineageTag: c477aa98-d200-4a9f-99d2-bcb3c3027143
		summarizeBy: none
		sourceColumn: Hora Num

		annotation SummarizationSetBy = User

	column 'Minuto Num'
		dataType: int64
		formatString: 0
		lineageTag: 7fc5f2e6-eab8-47be-a027-b025ab8d5eec
		summarizeBy: none
		sourceColumn: Minuto Num

		annotation SummarizationSetBy = User

	column 'Segundo Num'
		dataType: int64
		formatString: 0
		lineageTag: f24b96b5-b30a-42c6-ac0a-cf55e2e4f5b3
		summarizeBy: none
		sourceColumn: Segundo Num

		annotation SummarizationSetBy = User

	column AMPM
		dataType: string
		lineageTag: 5c8efea2-ec79-49b4-a3a3-1c12211b815d
		summarizeBy: none
		sourceColumn: AMPM

		annotation SummarizationSetBy = Automatic

	column 'Hora AMPM'
		dataType: string
		lineageTag: ad092d64-df39-4e61-8e98-9520c2f80f3f
		summarizeBy: none
		sourceColumn: Hora AMPM

		annotation SummarizationSetBy = Automatic

	column Período
		dataType: string
		lineageTag: 74dbb4b3-97fe-408c-bb0b-3ecf43c427c2
		summarizeBy: none
		sourceColumn: Período

		annotation SummarizationSetBy = Automatic

	column 'Período Ordem'
		dataType: int64
		formatString: 0
		lineageTag: 12a0b39e-f34f-4d47-8b10-b4f5df9d2f1a
		summarizeBy: none
		sourceColumn: Período Ordem

		annotation SummarizationSetBy = User

	partition dHora = m
		mode: import
		source = ```
				let
				    Lista = {0..86399},
				    ConverteParaTabela = Table.FromList(Lista, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
				    AlteraTipo = Table.TransformColumnTypes(ConverteParaTabela,{{"Column1", Int64.Type}}),
				    AlteraNomeCol = Table.RenameColumns(AlteraTipo,{{"Column1", "Segundo"}}),
				    ColDuracao = Table.AddColumn(AlteraNomeCol,"Duração", each #duration(0,0,0,[Segundo]), type duration),
				    ColHora = Table.AddColumn(ColDuracao, "Hora", each #time(Duration.Hours([Duração]),Duration.Minutes([Duração]),Duration.Seconds([Duração])), type time),
				    RemoveCols = Table.RemoveColumns(ColHora,{"Duração", "Segundo"}),
				    ColHoraNum = Table.AddColumn(RemoveCols, "Hora Num", each Time.Hour([Hora]), Int64.Type),
				    ColMinutoNum = Table.AddColumn(ColHoraNum, "Minuto Num", each Time.Minute([Hora]), Int64.Type),
				    ColSegundoNum = Table.AddColumn(ColMinutoNum, "Segundo Num", each Time.Second([Hora]), Int64.Type),
				    ColAMPM = Table.AddColumn(ColSegundoNum,"AMPM", each if [Hora Num] < 12 then "AM" else "PM", type text),
				    ColHoraAMPM = Table.AddColumn(ColAMPM, "Hora AMPM", each 
				        if [Hora Num] = 0 then "12 AM"
				        else if [Hora Num] >= 1 and [Hora Num] <= 11 then Number.ToText([Hora Num]) & " AM" 
				        else if [Hora Num] = 12 then "12 PM"
				        else if [Hora Num] >= 13 then Number.ToText([Hora Num] - 12) & " PM"  
				        else "Unknown", type text),
				    ColPeriodo = 
				        Table.AddColumn(ColHoraAMPM, "Período", each 
				            if        [Hora Num] >= 0 and [Hora Num] <= 5 then "12AM to 6AM"
				            else if   [Hora Num] >= 6 and [Hora Num] <= 11 then "6AM to 12PM"
				            else if   [Hora Num] >= 12 and [Hora Num] <= 17  then "12PM to 6PM"
				            else if   [Hora Num] >= 18 and [Hora Num] <= 23 then "6PM to 12AM"
				            else "Unknown", type text
				            ),
				    ColPeriodoOrdem = 
				        Table.AddColumn(ColPeriodo, "Período Ordem", each 
				            if        [Hora Num] >= 0 and [Hora Num] <= 5 then 1
				            else if   [Hora Num] >= 6 and [Hora Num] <= 11 then 2
				            else if   [Hora Num] >= 12 and [Hora Num] <= 17  then 3
				            else if   [Hora Num] >= 18 and [Hora Num] <= 23 then 4
				            else 5, Int64.Type
				        )
				in
				    ColPeriodoOrdem
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

